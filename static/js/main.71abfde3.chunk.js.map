{"version":3,"sources":["components/TopBar/index.js","pages/home/components/Body/index.js","pages/home/index.js","App.js","serviceWorker.js","index.js"],"names":["index","className","Nav","src","NavItem","NavLink","href","Body","animateOnce","delay","animateIn","Jumbotron","Button","style","backgroundColor","borderColor","color","onClick","window","open","username","grid","items-limit","width","height","frameborder","border","allowfullscreen","aria-hidden","tabindex","TopBar","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6SA4BeA,G,MAxBD,WACZ,OACE,yBAAKC,UAAU,SACb,kBAACC,EAAA,EAAD,CAAKD,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,cAAcE,IAAI,iBACjC,uBAAGF,UAAU,SAAb,yFAEF,yBAAKA,UAAU,oBACb,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,KAAd,WAEF,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,KAAd,eAEF,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,KAAd,sB,8CCmFGC,EAjGF,WACX,OACE,yBAAKN,UAAU,WACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAiBO,aAAa,EAAMC,MAAO,IAAKC,UAAU,UACxD,qDAEF,kBAAC,IAAD,CAAiBF,aAAa,EAAMC,MAAO,IAAMC,UAAU,UACzD,kDAGJ,kBAAC,IAAD,CAAiBF,aAAa,EAAME,UAAU,UAC5C,kBAACC,EAAA,EAAD,CAAWV,UAAU,aACnB,6BACE,wBAAIA,UAAU,aAAd,+BACA,8RAMA,wBAAIA,UAAU,SACd,yBAAKA,UAAU,6BACb,kEACA,2BACE,kBAACW,EAAA,EAAD,CACEX,UAAU,OACVY,MAAO,CAAEC,gBAAiB,UAAWC,YAAa,WAClDC,MAAM,UACNC,QAAS,WACPC,OAAOC,KACL,+CACA,YAPN,yBAiBR,yBAAKlB,UAAU,oBACb,+CACA,kNAOJ,kBAAC,IAAD,CACEO,aAAa,EACbE,UAAU,SACVT,UAAU,aAGZ,yBAAKA,UAAU,yCACb,kBAAC,IAAD,CAAiBO,aAAa,EAAME,UAAU,SAASD,MAAO,KAC5D,yBAAKR,UAAU,iBACb,uBAAGA,UAAU,0BAAb,+BAGJ,sCACEmB,SAAS,qBACTC,KAAK,MACLC,cAAa,IAEf,kBAAC,IAAD,CAAiBd,aAAa,EAAME,UAAU,UAC5C,yBAAKG,MAAO,CAAEU,MAAO,OAAQC,OAAQ,SACnC,kBAACb,EAAA,EAAD,CAAWV,UAAU,WACnB,yBAAKY,MAAO,CAAEU,MAAO,QAAUtB,UAAU,QACvC,wBAAIA,UAAU,aAAd,sBACA,6LAMF,4BACEE,IAAI,mTACJoB,MAAM,OACNC,OAAO,MACPC,YAAY,IACZZ,MAAO,CAAEa,OAAQ,GACjBC,gBAAgB,GAChBC,cAAY,QACZC,SAAS,YChFV7B,EATD,WACZ,OACE,yBAAKa,MAAO,CAAEU,MAAO,SACnB,kBAACO,EAAD,MACA,kBAAC,EAAD,QCISC,MARf,WACE,OACE,yBAAK9B,UAAU,WACb,kBAAC,EAAD,QCKc+B,QACW,cAA7Bd,OAAOe,SAASC,UAEe,UAA7BhB,OAAOe,SAASC,UAEhBhB,OAAOe,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.71abfde3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport './styles/index.css';\r\n\r\nconst index = () => {\r\n  return (\r\n    <div className='teste'>\r\n      <Nav className='navbar'>\r\n        <div className='topbar-wrapper'>\r\n          <img className='topbar-logo' src='img/logo.jpg' />\r\n          <p className='title'>ùê¥ùëüùëúùë§ùëéùëõùëé</p>\r\n        </div>\r\n        <div className='navlinks-wrapper'>\r\n          <NavItem>\r\n            <NavLink href='#'>Inicio</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href='#'>Quem somos</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href='#'>Fale conosco</NavLink>\r\n          </NavItem>\r\n        </div>\r\n      </Nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import React, { useState } from 'react';\r\nimport { Jumbotron, Button } from 'reactstrap';\r\nimport './styles/body.css';\r\nimport '@ptkdev/webcomponent-instagram-widget';\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\n\r\nconst Body = () => {\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='entry-div'>\r\n        <ScrollAnimation animateOnce={true} delay={500} animateIn='fadeIn'>\r\n          <p>Mergulhe no ver√£o.</p>\r\n        </ScrollAnimation>\r\n        <ScrollAnimation animateOnce={true} delay={2000} animateIn='fadeIn'>\r\n          <p>Mergulhe na vida.</p>\r\n        </ScrollAnimation>\r\n      </div>\r\n      <ScrollAnimation animateOnce={true} animateIn='fadeIn'>\r\n        <Jumbotron className='jumbotrom'>\r\n          <div>\r\n            <h1 className='display-5'>Moda praia Atacado e Varejo</h1>\r\n            <p>\r\n              Somos uma empresa familiar que est√° no mercado h√° mais de 20 anos,\r\n              com o firme prop√≥sito de n√£o somente vender bikinis, mas\r\n              principalmente fazer nossos clientes se sentirem lindos e √∫nicos.\r\n              Fornecemos sempre produtos de excelente qualidade.\r\n            </p>\r\n            <hr className='my-2' />\r\n            <div className='d-flex align-items-center'>\r\n              <p>Veja nossas novidades no INSTAGRAM!</p>\r\n              <p>\r\n                <Button\r\n                  className='ml-3'\r\n                  style={{ backgroundColor: '#800080', borderColor: '#800080' }}\r\n                  color='primary'\r\n                  onClick={() => {\r\n                    window.open(\r\n                      'https://www.instagram.com/arowana_modapraia/',\r\n                      '_blank' // <- This is what makes it open in a new window.\r\n                    );\r\n                  }}\r\n                >\r\n                  Ir para instagram\r\n                </Button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n        <div className='work-with fadeIn'>\r\n          <h1>Nossos produtos</h1>\r\n          <p>\r\n            Trabalhamos com vendas em atacado e varejo, todos nossos produtos\r\n            s√£o confeccionados a m√£o e os designes s√£o baseados nos bikines mais\r\n            quentes do momento no mundo todo!\r\n          </p>\r\n        </div>\r\n      </ScrollAnimation>\r\n      <ScrollAnimation\r\n        animateOnce={true}\r\n        animateIn='fadeIn'\r\n        className='swimming'\r\n      ></ScrollAnimation>\r\n\r\n      <div className='d-flex flex-column align-items-center'>\r\n        <ScrollAnimation animateOnce={true} animateIn='fadeIn' delay={2000}>\r\n          <div className='some-products'>\r\n            <p className='instagram-widget-title'>Alguns de nossos modelos.</p>\r\n          </div>\r\n        </ScrollAnimation>\r\n        <instagram-widget\r\n          username='@arowana_modapraia'\r\n          grid='3x3'\r\n          items-limit={9}\r\n        />\r\n        <ScrollAnimation animateOnce={true} animateIn='fadeIn'>\r\n          <div style={{ width: '100%', height: '100%' }}>\r\n            <Jumbotron className='find-us'>\r\n              <div style={{ width: '100%' }} className='pr-5'>\r\n                <h1 className='display-5'>Onde nos encontrar</h1>\r\n                <p>\r\n                  Nos localizamos na famosa Rua dos Buiquinis, no bairro Gamboa,\r\n                  um cluster de moda praia muito movimentado e quente! Veja ao\r\n                  lado como chegar √† nossa loja.\r\n                </p>\r\n              </div>\r\n              <iframe\r\n                src='https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d919.0022021629215!2d-42.0206166!3d-22.876133!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x9704c8441452cf%3A0x128cab382d54cfac!2sR.%20dos%20Biqu%C3%ADnis%20-%20Gamboa%2C%20Cabo%20Frio%20-%20RJ%2C%2028924-180!5e0!3m2!1spt-BR!2sbr!4v1597557613978!5m2!1spt-BR!2sbr'\r\n                width='100%'\r\n                height='450'\r\n                frameborder='0'\r\n                style={{ border: 0 }}\r\n                allowfullscreen=''\r\n                aria-hidden='false'\r\n                tabindex='0'\r\n              />\r\n            </Jumbotron>\r\n          </div>\r\n        </ScrollAnimation>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n\r\n/* <div className='carrosel-wrapper'>\r\n        <Carousel\r\n          className='carrosel'\r\n          activeIndex={activeIndex}\r\n          next={next}\r\n          previous={previous}\r\n          ride={'carousel'}\r\n          interval={5000}\r\n        >\r\n          <CarouselIndicators\r\n            items={items}\r\n            activeIndex={activeIndex}\r\n            onClickHandler={goToIndex}\r\n          />\r\n          {slides}\r\n          <CarouselControl\r\n            direction='prev'\r\n            directionText='Previous'\r\n            onClickHandler={previous}\r\n          />\r\n          <CarouselControl\r\n            direction='next'\r\n            directionText='Next'\r\n            onClickHandler={next}\r\n          />\r\n        </Carousel>\r\n      </div> */\r\n","import React from 'react';\r\nimport TopBar from '../../components/TopBar';\r\nimport Body from './components/Body';\r\n\r\nconst index = () => {\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <TopBar />\r\n      <Body />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './pages/home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='wrapper'>\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}